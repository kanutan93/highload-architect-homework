version: '3.5'
services:
  backend:
    container_name: backend
    image: kanutan93/hl-homework:1.0.19
    restart: always
    environment:
      MASTER_DB_URL: 'jdbc:postgresql://db-master:5432/social_network'
      MASTER_DB_USER: 'social_network_user'
      MASTER_DB_PASSWORD: 'password'
#      SLAVE_DB_URL: 'jdbc:postgresql://db-slave1:5432/social_network'
#      SLAVE_DB_USER: 'social_network_user'
#      SLAVE_DB_PASSWORD: 'password'
      DIALOG_DB_URL: 'jdbc:postgresql://master:5432/postgres'
      DIALOG_DB_USER: 'postgres'
      DIALOG_DB_PASSWORD: 'password'
      REDIS_HOST: 'redis'
      REDIS_PORT: '6379'
      REDIS_PASSWORD: 'password'
      KAFKA_BOOTSTRAP_SERVERS: 'hl-kafka:9091'
      KAFKA_CONSUMER_GROUP_ID: 'social_network'
      KAFKA_TOPIC: 'posts'
    ports:
      - "8080:8080"

  db-master:
    container_name: db-master
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: 'social_network'
      POSTGRES_USER: 'social_network_user'
      POSTGRES_PASSWORD: 'password'
    volumes:
      - ./docker/postgres/db-master:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  db-dialog:
    container_name: db-dialog
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: 'social_network_dialog'
      POSTGRES_USER: 'social_network_dialog_user'
      POSTGRES_PASSWORD: 'password'
    volumes:
      - ./docker/postgres/db-dialog:/var/lib/postgresql/data
    ports:
      - "5435:5432"
#  db-slave1:
#    container_name: db-slave1
#    image: postgres
#    restart: always
#    environment:
#      POSTGRES_DB: 'social_network'
#      POSTGRES_USER: 'social_network_user'
#      POSTGRES_PASSWORD: 'password'
#    volumes:
#      - ./docker/postgres/db-slave1:/var/lib/postgresql/data
#    ports:
#      - "5433:5432"
#
#  db-slave2:
#    container_name: db-slave2
#    image: postgres
#    restart: always
#    environment:
#      POSTGRES_DB: 'social_network'
#      POSTGRES_USER: 'social_network_user'
#      POSTGRES_PASSWORD: 'password'
#    volumes:
#      - ./docker/postgres/db-slave2:/var/lib/postgresql/data
#    ports:
#      - "5434:5432"
#
#  master:
#    container_name: citus-master
#    image: citusdata/citus:11.3.0
#    labels:
#      - "com.citusdata.role=Master"
#    environment: &AUTH
#      POSTGRES_USER: 'postgres'
#      POSTGRES_PASSWORD: 'password'
#      PGUSER: 'postgres'
#      PGPASSWORD: 'pass'
#      POSTGRES_HOST_AUTH_METHOD: "trust"
#    ports:
#      - "5435:5432"
#  worker:
#    image: citusdata/citus:11.3.0
#    labels:
#      - "com.citusdata.role=Worker"
#    depends_on:
#      - manager
#    environment: *AUTH
#    command: "/wait-for-manager.sh"
#    volumes:
#      - healthcheck-volume:/healthcheck
#  manager:
#    container_name: citus-manager
#    image: citusdata/membership-manager:0.3.0
#    volumes:
#      - '${DOCKER_SOCK:-/var/run/docker.sock}:/var/run/docker.sock'
#      - healthcheck-volume:/healthcheck
#    depends_on:
#      - master
#    environment: *AUTH

  redis:
    container_name: redis
    image: redis
    restart: always
    environment:
      REDIS_PASSWORD: 'password'
    ports:
      - "6379:6379"

  tarantool:
    container_name: tarantool
    image: tarantool/tarantool
    restart: always
    environment:
      TARANTOOL_USER_NAME: tarantool
      TARANTOOL_USER_PASSWORD: password
    volumes:
      - ./tarantool:/opt/tarantool
    ports:
      - "3301:3301"

  hl-kafka:
    container_name: hl-kafka
    image: confluentinc/cp-kafka:latest
    restart: always
    depends_on:
      - hl-zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://hl-kafka:9091,PLAINTEXT_INTERNAL://localhost:29091
      KAFKA_ZOOKEEPER_CONNECT: hl-zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
    ports:
      - "9091:9091"
      - "29091:29091"

  hl-kafka2:
    container_name: hl-kafka2
    image: confluentinc/cp-kafka:latest
    restart: always
    depends_on:
      - hl-zookeeper
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://hl-kafka2:9092,PLAINTEXT_INTERNAL://localhost:29092
      KAFKA_ZOOKEEPER_CONNECT: hl-zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
    ports:
      - "9092:9092"
      - "29092:29092"

  hl-kafka3:
    container_name: hl-kafka3
    image: confluentinc/cp-kafka:latest
    restart: always
    depends_on:
      - hl-zookeeper
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://hl-kafka3:9093,PLAINTEXT_INTERNAL://localhost:29093
      KAFKA_ZOOKEEPER_CONNECT: hl-zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
    ports:
      - "9093:9093"
      - "29093:29093"

  hl-zookeeper:
    container_name: hl-zookeeper
    image: confluentinc/cp-zookeeper:latest
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

volumes:
  healthcheck-volume:
